From 2713411c2744c79d82702366b46b788532bbf3fc Mon Sep 17 00:00:00 2001
From: sgaouaou <sgaouaou@50fbe906-d41e-0410-8a96-31537896a350>
Date: Wed, 17 Feb 2010 16:43:01 +0000
Subject: [PATCH] AC'97: Bug fix: Add support for audio full duplex.

git-svn-id: svn://rfolxts01.rfo.atmel.com/at91_sandbox/linux-2.6.x/branches/linux-2.6.30-at91@13834 50fbe906-d41e-0410-8a96-31537896a350
---
 sound/atmel/ac97c.c |   53 +++++++++++++++++++++++++++++---------------------
 1 files changed, 31 insertions(+), 22 deletions(-)

diff --git a/sound/atmel/ac97c.c b/sound/atmel/ac97c.c
index dad1d2d..2693433 100644
--- a/sound/atmel/ac97c.c
+++ b/sound/atmel/ac97c.c
@@ -68,7 +68,7 @@ struct atmel_ac97c {
 	u64				cur_format;
 	unsigned int			cur_rate;
 	unsigned long			flags;
-	int				period;
+	int				playback_period, capture_period;
 	/* Serialize access to opened variable */
 	spinlock_t			lock;
 	void __iomem			*regs;
@@ -317,8 +317,8 @@ static int atmel_ac97c_playback_prepare(struct snd_pcm_substream *substream)
 	int block_size = frames_to_bytes(runtime, runtime->period_size);
 	unsigned long word = ac97c_readl(chip, OCA);
 	int retval;
-
-	chip->period = 0;
+	
+	chip->playback_period = 0;
 	word &= ~(AC97C_CH_MASK(PCM_LEFT) | AC97C_CH_MASK(PCM_RIGHT));
 
 	/* assign channels to AC97C channel A */
@@ -336,8 +336,12 @@ static int atmel_ac97c_playback_prepare(struct snd_pcm_substream *substream)
 	}
 	ac97c_writel(chip, OCA, word);
 
+	word = ac97c_readl(chip, CAMR);
 	/* configure sample format and size */
-	word = AC97C_CMR_DMAEN | AC97C_CMR_SIZE_16;
+	if (chip->opened <= 1)
+		word = AC97C_CMR_DMAEN | AC97C_CMR_SIZE_16;
+	else
+		word |= AC97C_CMR_DMAEN | AC97C_CMR_SIZE_16;
 
 	switch (runtime->format) {
 	case SNDRV_PCM_FORMAT_S16_LE:
@@ -356,7 +360,6 @@ static int atmel_ac97c_playback_prepare(struct snd_pcm_substream *substream)
 
 	/* Enable underrun interrupt on channel A */
 	word |= AC97C_CSR_UNRUN;
-
 	ac97c_writel(chip, CAMR, word);
 
 	/* Enable channel A event interrupt */
@@ -405,7 +408,7 @@ static int atmel_ac97c_capture_prepare(struct snd_pcm_substream *substream)
 	unsigned long word = ac97c_readl(chip, ICA);
 	int retval;
 
-	chip->period = 0;
+	chip->capture_period = 0;
 	word &= ~(AC97C_CH_MASK(PCM_LEFT) | AC97C_CH_MASK(PCM_RIGHT));
 
 	/* assign channels to AC97C channel A */
@@ -422,9 +425,13 @@ static int atmel_ac97c_capture_prepare(struct snd_pcm_substream *substream)
 		return -EINVAL;
 	}
 	ac97c_writel(chip, ICA, word);
-
-	/* configure sample format and size */
-	word = AC97C_CMR_DMAEN | AC97C_CMR_SIZE_16;
+	
+	word = ac97c_readl(chip, CAMR);
+	/* configure sample format and size */	
+	if (chip->opened <= 1)
+		word = AC97C_CMR_DMAEN | AC97C_CMR_SIZE_16;
+	else
+		word |= AC97C_CMR_DMAEN | AC97C_CMR_SIZE_16;
 
 	switch (runtime->format) {
 	case SNDRV_PCM_FORMAT_S16_LE:
@@ -443,8 +450,8 @@ static int atmel_ac97c_capture_prepare(struct snd_pcm_substream *substream)
 
 	/* Enable overrun interrupt on channel A */
 	word |= AC97C_CSR_OVRUN;
-
 	ac97c_writel(chip, CAMR, word);
+
 	/* Enable channel A event interrupt */
 	word = ac97c_readl(chip, IMR);
 	word |= AC97C_SR_CAEVT;
@@ -487,10 +494,11 @@ static int
 atmel_ac97c_playback_trigger(struct snd_pcm_substream *substream, int cmd)
 {
 	struct atmel_ac97c *chip = snd_pcm_substream_chip(substream);
-	unsigned long camr, ptcr = 0;
+	unsigned long camr, casr, ptcr = 0;
 	int retval = 0;
 
 	camr = ac97c_readl(chip, CAMR);
+	ptcr = readl(chip->regs + ATMEL_PDC_PTSR);
 
 	switch (cmd) {
 	case SNDRV_PCM_TRIGGER_PAUSE_RELEASE: /* fall through */
@@ -511,7 +519,7 @@ atmel_ac97c_playback_trigger(struct snd_pcm_substream *substream, int cmd)
 		if (cpu_is_at32ap7000())
 			dw_dma_cyclic_stop(chip->dma.tx_chan);
 		else
-			ptcr = ATMEL_PDC_TXTDIS;
+			ptcr |= ATMEL_PDC_TXTDIS;
 		if (chip->opened <= 1)
 			camr &= ~AC97C_CMR_CENA;
 		break;
@@ -531,10 +539,11 @@ static int
 atmel_ac97c_capture_trigger(struct snd_pcm_substream *substream, int cmd)
 {
 	struct atmel_ac97c *chip = snd_pcm_substream_chip(substream);
-	unsigned long camr, ptcr = 0;
+	unsigned long camr, casr, ptcr = 0;
 	int retval = 0;
 
 	camr = ac97c_readl(chip, CAMR);
+	ptcr = readl(chip->regs + ATMEL_PDC_PTSR);
 
 	switch (cmd) {
 	case SNDRV_PCM_TRIGGER_PAUSE_RELEASE: /* fall through */
@@ -555,7 +564,7 @@ atmel_ac97c_capture_trigger(struct snd_pcm_substream *substream, int cmd)
 		if (cpu_is_at32ap7000())
 			dw_dma_cyclic_stop(chip->dma.rx_chan);
 		else
-			ptcr = ATMEL_PDC_RXTDIS;
+			ptcr |= (ATMEL_PDC_RXTDIS);
 		if (chip->opened <= 1)
 			camr &= ~AC97C_CMR_CENA;
 		break;
@@ -657,11 +666,11 @@ static irqreturn_t atmel_ac97c_interrupt(int irq, void *dev)
 				runtime = chip->playback_substream->runtime;
 				block_size = frames_to_bytes(runtime,
 						runtime->period_size);
-				chip->period++;
+				chip->playback_period++;
 
-				if (chip->period == runtime->periods)
-					chip->period = 0;
-				next_period = chip->period + 1;
+				if (chip->playback_period == runtime->periods)
+					chip->playback_period = 0;
+				next_period = chip->playback_period + 1;
 				if (next_period == runtime->periods)
 					next_period = 0;
 
@@ -679,11 +688,11 @@ static irqreturn_t atmel_ac97c_interrupt(int irq, void *dev)
 				runtime = chip->capture_substream->runtime;
 				block_size = frames_to_bytes(runtime,
 						runtime->period_size);
-				chip->period++;
+				chip->capture_period++;
 
-				if (chip->period == runtime->periods)
-					chip->period = 0;
-				next_period = chip->period + 1;
+				if (chip->capture_period == runtime->periods)
+					chip->capture_period = 0;
+				next_period = chip->capture_period + 1;
 				if (next_period == runtime->periods)
 					next_period = 0;
 
-- 
1.5.6.5

